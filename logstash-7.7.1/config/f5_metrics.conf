input {
	kafka {
            bootstrap_servers => "${KAFKA_URL}"
            topics => "f5logs"
			client_id => "f5logs"
			group_id => "f5logsgroup"
			auto_offset_reset => "earliest"
            #codec => json {}
          } 
    
}

filter{
    grok{
    	match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{NOTSPACE:delete} %{WORD:Type} /%{NOTSPACE:Partition}/%{NOTSPACE:Name} state change %{GREEDYDATA:Status} \s*\(%{DATA:Status_Message}\)"}
        match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT}\]: %{DATA:delete}: %{NOTSPACE:Type}: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:Virtual_Server} %{DATA:delete}=%{IPV4:VIP_IP}:%{INT:Port}\) \(Server %{NOTSPACE:Server}\) state change %{GREEDYDATA:Status} \(%{GREEDYDATA:Status_Message}\)"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT}\]: %{DATA:delete}: %{NOTSPACE:Type}: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:Virtual_Server} %{DATA:delete}=%{IPV4:VIP_IP}:%{INT:Port}\) \(Server %{NOTSPACE:Server}\) state change %{GREEDYDATA:Status}"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{DATA:Type} /%{NOTSPACE:Partition}/%{NOTSPACE:Name} %{IPV4:VIP_IP}:%{INT:Port} %{DATA:Status} from %{IPV4:F5_IP} \s*\(%{DATA:Status_Message}\)"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:Pool} %{WORD:delete} /%{NOTSPACE:Member_Partition}/"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:Pool} %{WORD:delete} /%{NOTSPACE:Member_Partition}/%{NOTSPACE:Member_Name}:%{INT:Member_Port} %{NOTSPACE:Type} %{DATA:delete}/%{NOTSPACE:Monitor_Partition}/%{NOTSPACE:Monitor_Name}\: %{WORD:Monitor_Status}; %{DATA:delete}: %{DATA:Last_Error}  \] \s*\[ %{GREEDYDATA:Status_Duration}\]"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:Node} address %{IPV4:NodeIP} %{NOTSPACE:Type} %{DATA:delete}/%{NOTSPACE:Monitor_Partition}/%{NOTSPACE:Monitor_Name} %{WORD:Monitor_Status} \] \s*\[ %{GREEDYDATA:Status_Duration}\]"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{DATA:delete} /%{NOTSPACE:Partition}/%{NOTSPACE:Pool} %{GREEDYDATA:Message}"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{NOTSPACE:Type}: %{DATA:delete} /%{NOTSPACE:Partition}/%{NOTSPACE:Virtual_Server} %{GREEDYDATA:Message}"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{GREEDYDATA:Message} /%{NOTSPACE:Partition}/%{NOTSPACE:Pool}"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{DATA:delete}/%{NOTSPACE:Partition}/%{NOTSPACE:VIP_IP} %{WORD:Type} status changed from %{GREEDYDATA:Status}"}
		match => {"message"=>"%{SYSLOGTIMESTAMP:Timestamp} %{NOTSPACE:Slot}/%{NOTSPACE:Host} %{LOGLEVEL:Sysloglevel} %{WORD:Service}\[%{INT:delete}\]: %{DATA:delete}: %{NOTSPACE:delete} %{DATA:Type} /%{NOTSPACE:Partition}/%{NOTSPACE:Name}"}
    	}
	mutate {
		remove_field => ["delete","day","message","month","msgTimestamp"]
	}
}

output {
	 elasticsearch {
	    hosts => ["localhost":9200]
			index => "f5metrics_w"
	    	template_name => "logtemplate"			
			user => "${XPACK_USER_NAME}"
			password => "${XPACK_PASSWORD}"	
                	ssl => true
        	        cacert => "${LOGSTASH_ELASTIC_SSL_CA_CERT}"
	}
 }